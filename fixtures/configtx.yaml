# 定义组织机构实体
Organizations:
    - &OrdererOrg
        Name: OrdererOrg # 组织的名称
        ID: OrdererMSP # 组织的MSPID
        MSPDir: crypto-config/ordererOrganizations/example.com/msp # 组织的证书的相对位置
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"
        OrdererEndpoints:
            - orderer.example.com:7050

    - &Org1
        Name: Org1MSP
        ID: Org1MSP
        MSPDir: crypto-config/peerOrganizations/org1.example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('Org1MSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('Org1MSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('Org1MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('Org1MSP.member')"
        AnchorPeers: # 组织锚节点的配置
            - Host: peer0.org1.example.com
              Port: 7051

Capabilities:
    Channel: &ChannelCapabilities
        V2_0: true
    Orderer: &OrdererCapabilities
        V2_0: true
    Application: &ApplicationCapabilities
        V2_0: true

# 定义Peer组织如何与应用程序通道交互的策略
# 默认策略：所有Peer组织都将能够读取数据并将数据写入账本
Application: &ApplicationDefaults
    Organizations:
        - *Org1
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement:
            Type: Signature
            Rule: "OR('Org1MSP.member','Org2MSP.member')"
        Endorsement:
            Type: Signature
            Rule: "OR('Org1MSP.member','Org2MSP.member')"

    Capabilities:
        <<: *ApplicationCapabilities

# 定义了排序服务的相关参数，这些参数将用于创建创世区块
Orderer: &OrdererDefaults
    # 排序节点类型用来指定要启用的排序节点实现，不同的实现对应不同的共识算法
    OrdererType: solo # 共识机制
    Addresses: # Orderer 的域名（用于连接）
        - orderer.example.com:7050
    EtcdRaft:
        Consenters:
        - Host: orderer.example.com
          Port: 7050
          ClientTLSCert: ../organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
          ServerTLSCert: ../organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
    BatchTimeout: 2s # 出块时间间隔
    BatchSize: # 用于控制每个block的信息量
        MaxMessageCount: 10 #每个区块的消息个数.
        AbsoluteMaxBytes: 99 MB #每个区块最大的信息大小
        PreferredMaxBytes: 512 KB #每个区块包含的一条信息最大长度
    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

Channel: &ChannelDefaults
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
    Capabilities:
        <<: *ChannelCapabilities

Profiles:
  #  TwoOrgsOrdererGenesis配置文件用于创建系统通道创世块
  #  该配置文件创建一个名为SampleConsortium的联盟
  #  该联盟在configtx.yaml文件中包含组织Org1
    TwoOrgsOrdererGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            SampleConsortium:
                Organizations:
                    - *Org1
  # 使用TwoOrgsChannel配置文件创建应用程序通道
    TwoOrgsChannel:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Org1

            Capabilities:
                <<: *ApplicationCapabilities